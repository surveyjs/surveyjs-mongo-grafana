services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    ports:
      - "27017:27017"
    networks:
      - analytics-net
    restart: unless-stopped

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - analytics-net
    restart: unless-stopped

  node-server:
    build: ./node-server
    container_name: node-server
    environment:
      - MONGO_URI=mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongodb:27017
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./node-server/dist:/app/dist
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - analytics-net
    restart: unless-stopped

  grafana:
    # image: grafana/grafana:10.3.1
    build: ./grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/plugins:/var/lib/grafana/plugins
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=surveyjs-grafana-datasource
      # - GF_INSTALL_PLUGINS=grafana-mongodb-datasource,grafana-simple-json-datasource,yesoreyeram-infinity-datasource
    networks:
      - analytics-net
    depends_on:
      - redis
      - mongodb
    restart: unless-stopped

  nlp-service:
    build: ./nlp-service
    container_name: nlp-service
    # command: >
    #   sh -c "pip install fastapi uvicorn textblob spacy
    #   && python -m spacy download en_core_web_sm
    #   && uvicorn main:app --host 0.0.0.0 --port 5000"    
    # volumes:
    #   - ./nlp-service:/app
    # working_dir: /app
    ports:
      - "5000:5000"
    networks:
      - analytics-net
      
networks:
  analytics-net:
    driver: bridge
